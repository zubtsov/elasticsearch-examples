version: '3.4'
#TODO: how to set ulimits in swarm mode???
#TODO: configure apache http server
#TODO: expose ALL API through reverse proxy server
#TODO: collect cofiguration parameters in one place (eliminate duplication & hardcode)
#TODO: define different networks?
#TODO: eliminate duplication of configuration
#TODO: ensure fault tolerance/failover, high availability/restartability
#TODO: create cluster of at least 3 PC (use overlay networks + docker swarm)
#TODO: check persistent volume drivers in case of swarm/stack across different PCs
services:
#ELASTICSEARCH CLUSTER
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.2
    container_name: zubtsov-es1
    env_file: ./elasticsearch-env/src/main/resources/elastic_common.env
    environment:
      - node.name=first-node
      - network.host=elasticsearch1
      - discovery.zen.ping.unicast.hosts=elasticsearch1,elasticsearch2
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      mailuploadernet:
        ipv4_address: 192.168.1.0
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
    deploy:
      placement:
        constraints:
          - node.labels.elastic1 == true
      restart_policy:
        condition: on-failure
        max_attempts: 1
  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.2
    container_name: zubtsov-es2
    env_file: ./elasticsearch-env/src/main/resources/elastic_common.env
    environment:
      - node.name=second-node
      - network.host=elasticsearch2
      - discovery.zen.ping.unicast.hosts=elasticsearch1,elasticsearch2
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    ports:
      - 9201:9200
      - 9301:9300
    networks:
      mailuploadernet:
        ipv4_address: 192.168.1.1
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
    deploy:
      placement:
        constraints:
          - node.labels.elastic2 == true

#SOLR CLUSTER
  solr1:
    image: solr:7.2.1
    container_name: zubtsov-solr1
    environment:
      - ZK_HOST=zoo1,zoo2
    ports:
     - 8983:8983
    volumes:
      - solrdata1:/opt/solr/server/solr/mycores #TODO: how to locate/reside all cores in this folder?
    networks:
      mailuploadernet:
        ipv4_address: 192.168.2.0
    depends_on:
      - zoo1
      - zoo2
    deploy:
      placement:
        constraints:
          - node.labels.solr1 == true
  solr2:
    image: solr:7.2.1
    container_name: zubtsov-solr2
    environment:
      - ZK_HOST=zoo1,zoo2
    ports:
     - 8984:8983
    volumes:
      - solrdata2:/opt/solr/server/solr/mycores #TODO: how to locate/reside all cores in this folder?
    networks:
      mailuploadernet:
        ipv4_address: 192.168.2.1
    depends_on:
      - zoo1
      - zoo2
    deploy:
      placement:
        constraints:
          - node.labels.solr2 == true

#ZOOKEEPER TODO: how to bind to normal ip address (not 0.0.0.0)?
  zoo1:
    image: zookeeper
    container_name: zubtsov-zoo1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888
    hostname: zoo1
    ports:
      - 2181:2181
    volumes:
      - zoo1data:/data
      - zoo1datalog:/datalog
    networks:
      mailuploadernet:
        ipv4_address: 192.168.3.0
    deploy:
      placement:
        constraints:
          - node.labels.zoo1 == true
      restart_policy:
        condition: any
  zoo2:
    image: zookeeper
    container_name: zubtsov-zoo2
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888
    hostname: zoo2
    ports:
      - 2182:2181
    volumes:
      - zoo2data:/data
      - zoo2datalog:/datalog
    networks:
      mailuploadernet:
        ipv4_address: 192.168.3.1
    deploy:
      placement:
        constraints:
          - node.labels.zoo2 == true
      restart_policy:
        condition: any

#NGINX
  nginx:
    image: nginx-zubtsov
    ports:
     - 8080:8080
    networks:
      mailuploadernet:
        ipv4_address: 192.168.4.0
    deploy:
      placement:
        constraints:
          - node.labels.nginx == true
      restart_policy:
        condition: on-failure
        max_attempts: 1

#APACHE HTTP SERVER TODO: fix
  httpd:
    image: httpd-zubtsov
    container_name: httpd-zubtsov
    networks:
      mailuploadernet:
        ipv4_address: 192.168.5.0
    ports:
      - 8000:8000
      - 80:80
      - 443:443
    deploy:
      placement:
        constraints:
          - node.labels.httpd == true
      restart_policy:
        condition: on-failure
        max_attempts: 1

#LOGSTASH
  logstash:
    image: logstash-zubtsov:latest
    container_name: zubtsov-logstash
    environment:
      - LOG_LEVEL=info
    ports:
      - 9600:9600
    networks:
      mailuploadernet:
        ipv4_address: 192.168.6.0
    volumes:
      - logstashdata:/usr/share/logstash/data
    depends_on:
      - solr1
      - solr2
      - elasticsearch1
      - elasticsearch2
    deploy:
      placement:
        constraints:
          - node.labels.logstash == true
      restart_policy:
        condition: on-failure
        max_attempts: 1

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  solrdata1:
    driver: local
  solrdata2:
    driver: local
  zoo1data:
    driver: local
  zoo1datalog:
    driver: local
  zoo2data:
    driver: local
  zoo2datalog:
    driver: local
  logstashdata:
    driver: local

networks:
  mailuploadernet:
    driver: overlay
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/16